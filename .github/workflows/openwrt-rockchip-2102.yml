#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT

name: Build OpenWrt

on:
  repository_dispatch:
  # workflow_dispatch:
  #   inputs:
  #     ssh:
  #       description: 'SSH connection to Actions'
  #       required: false
  #       default: 'false'
  # push:
  #   branches:
  #     - 21.02
  #   paths:
  #     - '.github/workflows/openwrt-rockchip-2102.yml'
  #     - 'step/00-prepare_openwrt.sh'
  #     - 'step/01-prepare_package.sh'
  #     - 'seed/rockchip.seed'

jobs:
    build:
      runs-on: ubuntu-18.04

      steps:
      - name: 检查完毕 && 准备编译
        uses: actions/checkout@main

      # - name: 显示 CPU 信息和硬盘可用空间
      #   run: |
      #     echo -e "Total CPU cores\t: $(nproc)"
      #     cat /proc/cpuinfo | grep 'model name'
      #     free -h

      - name: 设置环境变量
        run: |
          echo "SSH_ACTIONS=false" >> $GITHUB_ENV
          echo "UPLOAD_BIN_DIR=false" >> $GITHUB_ENV
          echo "UPLOAD_FIRMWARE=true" >> $GITHUB_ENV
          echo "UPLOAD_RELEASE=true" >> $GITHUB_ENV
          echo "UPLOAD_COWTRANSFER=false" >> $GITHUB_ENV
          echo "UPLOAD_WETRANSFER=false" >> $GITHUB_ENV
          echo "TZ=Asia/Shanghai" >> $GITHUB_ENV
      #    echo "Build_Date=$(date +%Y.%m.%d)" >> $GITHUB_ENV
          
      - name: 显示环境变量
        run: echo $GITHUB_ENV

      # - name: 释放硬盘空间
      #   run: |
      #     df -h
      #     sudo swapoff -a
      #     sudo rm -f /swapfile
      #     sudo apt clean
      #     docker rmi $(docker image ls -aq)
      #     df -h
      #     /bin/bash ./script/free_disk_space.sh

      - name: 构建编译环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E rm -rf /etc/apt/sources.list.d /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get update -y
          sudo -E apt-get install -y build-essential rsync asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python3 python3-pip python3-ply haveged lrzsz device-tree-compiler scons
          wget -qO - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | sed 's/python-/python3-/g' | /bin/bash
          sudo -E apt-get clean -y
          git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
          df -h

      - name: 下载源码
        run: |
          git clone -b openwrt-21.02 --single-branch https://git.openwrt.org/openwrt/openwrt.git openwrt
      
      - name: 预置系统 & 添加设备信息
        run: |
          cd openwrt
          cp -r ../step/* ./
          /bin/bash 00-prepare_openwrt.sh

      - name: 预置应用列表
        run: |
          cd openwrt
          /bin/bash 01-prepare_package.sh

      # - name: 移除 Upx (通用可执行文件压缩器)
      #   run: |
      #     cd openwrt
      #     /bin/bash 02-remove_upx.sh

      - name: 添加 ACL
        run: |
          cd openwrt
          /bin/bash 03-create_acl_for_luci.sh -a

      - name: 加载应用配置文件
        run: |
          cd openwrt
          mv ../seed/rockchip.seed .config
          make defconfig
      #    cp .config rockchip_multi.config

      - name: SSH connection to Actions
        uses: P3TERX/ssh2actions@v1.0.0
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          
      - name: 下载 OpenWrt 应用
        id: package
        run: |
          cd openwrt
          make defconfig
          make download -j128
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: 编译 aarch64 工具链
        id: compiletoolchain
        continue-on-error: true
        run: |
          cd openwrt
          let make_process=$(nproc)+1
          make toolchain/install -j${make_process} V=s

      - name: 失败重试
        if: steps.compiletoolchain.outcome == 'failure'
        run: |
          cd openwrt && make toolchain/install -j1 V=s

      - name: 编译 R2S & R4S & R1-Plus 固件
        id: compileopenwrt
        continue-on-error: true
        run: |
          cd openwrt
          let make_process=$(nproc)+1
          make -j${make_process} V=s || make -j${make_process} V=s

      - name: 失败重试
        if: steps.compileopenwrt.outcome == 'failure'
        run: |
          cat openwrt/.config
          cd openwrt && make -j1 V=s

      - name: 生成固件
        id: organize
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          mv openwrt/bin/targets/rockchip/armv8/*sysupgrade.img* ./artifact/
          cd ./artifact/
          ls -Ahl
          gzip -d *.gz && exit 0
          gzip --best *.img
          ls -Ahl
          sha256sum openwrt*r2s* | tee R2S-QC-$(date +%Y-%m-%d)-21.02.sha256sum
          sha256sum openwrt*r4s* | tee R4S-QC-$(date +%Y-%m-%d)-21.02.sha256sum
          sha256sum openwrt*r1-plus* | tee R1-plus-QC-$(date +%Y-%m-%d)-21.02.sha256sum
          zip R2S-QC-$(date +%Y-%m-%d)-21.02-ext4.zip *r2s*ext4*
          zip R2S-QC-$(date +%Y-%m-%d)-21.02-sfs.zip *r2s*squashfs*
          zip R4S-QC-$(date +%Y-%m-%d)-21.02-ext4.zip *r4s*ext4*
          zip R4S-QC-$(date +%Y-%m-%d)-21.02-sfs.zip *r4s*squashfs*
          zip R1-plus-QC-$(date +%Y-%m-%d)-21.02-ext4.zip *r1-plus*ext4*
          zip R1-plus-QC-$(date +%Y-%m-%d)-21.02-sfs.zip *r1-plus*squashfs*   
          cp ../openwrt/*.config ./
          ls -Ahl

      - name: 上传
        uses: actions/upload-artifact@main
        if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        with:
          name: OpenWRT_21.02
          path: ./artifact/

      - name: 发布固件
        id: create_release
        uses: ncipollo/release-action@v1.8.0
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        with:
          name: OpenWRT-21.02-for-rockchip
          allowUpdates: true
          tag: 2102
          commit: 21.02
          replacesArtifacts: true
          token: ${{ secrets.RELEASES_TOKEN }}
          bodyFile: "body-origin-21.02.md"
          artifacts: ./artifact/*.zip,./artifact/*.config,./artifact/*.sha256sum